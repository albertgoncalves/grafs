type point = (float * float)

type edge = (point * point)

let print_list (xs : string list) : unit =
    xs |> String.concat ", " |> (fun x -> "[" ^ x ^ "]") |> print_endline

let string_of_point ((a, b) : point) : string =
    Printf.sprintf "(%.3f, %.3f)" a b

let string_of_edge ((a, b) : edge) : string =
    Printf.sprintf "(%s, %s)" (string_of_point a) (string_of_point b)

let (_ : 'a) : unit =
    List.map string_of_point
        [
            (1.0, 0.0);
            (0.5, 0.25);
            (0.0, 1.0);
            (0.75, 0.65);
            (0.9, 0.45);
            (0.3, 0.7);
            (0.4, 0.6);
            (0.1, -0.1);
            (0.4, 0.2);
            (1.0, 0.35);
            (0.8, 0.5);
            (0.6, 0.37);
            (0.8, 1.0);
            (0.1, 0.25);
            (0.8, 0.0);
            (0.2, 0.3);
            (0.49, 0.78);
            (-0.9, 1.1);
            (0.1, 1.2);
        ]
    |> print_list;
    List.map string_of_edge
        [
            ((0.9, -3.2), (0.46666667, -0.16666667));
            ((0.46666667, -0.16666667), (0.225, 7.5e-2));
            ((0.225, 7.5e-2), (-0.91, 7.5e-2));
            ((0.9, -3.2), (0.9, 0.175));
            ((0.46666667, -0.16666667), (0.55625, 1.25e-2));
            ((0.55625, 1.25e-2), (0.7, 0.185));
            ((0.9, 0.175), (0.79378474, 0.23569444));
            ((0.7, 0.185), (0.79378474, 0.23569444));
            ((0.55625, 1.25e-2), (0.36875, 0.3875));
            ((0.225, 7.5e-2), (0.23125, 0.1125));
            ((0.23125, 0.1125), (0.36875, 0.3875));
            ((0.36875, 0.3875), (0.37125, 0.4025));
            ((0.7, 0.185), (0.42170212, 0.41691488));
            ((0.42170212, 0.41691488), (0.37125, 0.4025));
            ((0.23125, 0.1125), (7.142857e-3, 0.5607143));
            ((7.142857e-3, 0.5607143), (-9.423077e-2, 0.6057692));
            ((-9.423077e-2, 0.6057692), (-0.50545114, 0.55093986));
            ((-0.91, 7.5e-2), (-0.50545114, 0.55093986));
            ((0.37125, 0.4025), (0.21, 0.51));
            ((0.21, 0.51), (7.142857e-3, 0.5607143));
            ((0.79378474, 0.23569444), (0.79421055, 0.24421053));
            ((0.79421055, 0.24421053), (1.3694445, 0.8194444));
            ((0.79421055, 0.24421053), (0.77347827, 0.32195652));
            ((0.77347827, 0.32195652), (0.63856167, 0.5295206));
            ((0.42170212, 0.41691488), (0.58450276, 0.5584807));
            ((0.63856167, 0.5295206), (0.58450276, 0.5584807));
            ((0.77347827, 0.32195652), (0.925, 0.625));
            ((0.925, 0.625), (1.125, 0.775));
            ((1.125, 0.775), (1.3694445, 0.8194444));
            ((0.63856167, 0.5295206), (0.925, 0.625));
            ((0.58450276, 0.5584807), (0.575, 0.625));
            ((0.21, 0.51), (0.40833333, 0.7083333));
            ((0.575, 0.625), (0.40833333, 0.7083333));
            ((0.575, 0.625), (0.6816667, 0.8383333));
            ((0.6816667, 0.8383333), (1.125, 0.775));
            ((0.40833333, 0.7083333), (0.29121622, 0.9864865));
            ((-9.423077e-2, 0.6057692), (0.28333333, 0.98333335));
            ((0.28333333, 0.98333335), (0.29121622, 0.9864865));
            ((0.6816667, 0.8383333), (0.46319443, 1.1461805));
            ((0.29121622, 0.9864865), (0.46319443, 1.1461805));
            ((-0.50545114, 0.55093986), (-0.41842106, 1.3342105));
            ((0.28333333, 0.98333335), (-0.41842106, 1.3342105));
        ]
    |> print_list
